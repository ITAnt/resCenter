clf;
Fs=1000;
N=1024;Nsec=256;
%数据的长度和FFT所用的数据长度
n=0:N-1;t=n/Fs;
%采用的时间序列
randn('state',0);
xn=sin(2*pi*50*t)+2*sin(2*pi*120*t)+randn(1,N);
Pxx1=abs(fft(xn(1:256),Nsec).^2)/Nsec;
%第一段功率谱
Pxx2=abs(fft(xn(257:512),Nsec).^2)/Nsec;
%第二段功率谱
Pxx3=abs(fft(xn(513:768),Nsec).^2)/Nsec;
%第三段功率谱
Pxx4=abs(fft(xn(769:1024),Nsec).^2)/Nsec;
%第四段功率谱
Pxx=10*log10(Pxx1+Pxx2+Pxx3+Pxx4/4);
%Fourier振幅谱平方的平均值，并转化为dB
f=(0:length(Pxx)-1)*Fs/length(Pxx);
%给出频率序列
subplot(1,2,1),plot(f(1:Nsec/2),Pxx(1:Nsec/2));
%绘制功率谱曲线
xlabel('频率/Hz');ylabel('功率谱/dB');
title('平均周期图（无重叠） N=4*256');grid on;
%运用信号重叠分段估计功率谱
Pxx1=abs(fft(xn(1:256),Nsec).^2)/Nsec; 
%第一段功率谱
Pxx2=abs(fft(xn(129:384),Nsec).^2)/Nsec;
%第二段功率谱
Pxx3=abs(fft(xn(257:512),Nsec).^2)/Nsec;
%第三段功率谱
Pxx4=abs(fft(xn(385:640),Nsec).^2)/Nsec;
%第四段功率谱
Pxx5=abs(fft(xn(513:768),Nsec).^2)/Nsec;
%第四段功率谱
Pxx6=abs(fft(xn(641:896),Nsec).^2)/Nsec;
%第四段功率谱
Pxx7=abs(fft(xn(769:1024),Nsec).^2)/Nsec;
%第五段功率谱
Pxx=10*log10(Pxx1+Pxx2+Pxx3+Pxx4+Pxx5+Pxx6+Pxx7/7);
%Fourier振幅谱平方的平均值，并转化为dB
f=(0:length(Pxx)-1)*Fs/length(Pxx);
%给出频率序列
subplot(1,2,2),plot(f(1:Nsec/2),Pxx(1:Nsec/2));
%绘制功率谱曲线
xlabel('频率/Hz');ylabel('功率谱/dB');
title('平均周期图（重叠1/2） N=1024');
grid on;
